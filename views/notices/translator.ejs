<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>번역기</title>
    <meta name="theme-color" content="#254B7A"> <!-- Android Chrome -->
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"> <!-- iOS Safari -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/styles.css"> <!-- CSS 파일 경로 -->
    <style>
      /* 팝업 기본 스타일 */
      .popup {
          display: none;
          position: fixed;
          left: calc(50% + 150px); /* 중앙에서 왼쪽으로 200px 이동 */
          top: 50%;
          transform: translate(-50%, -50%);
          background: white;
          border: 1px solid #ccc;
          padding: 20px;
          z-index: 1000;
          width: 80%; /* 모바일 화면에서 80% */
          max-height: 80%;
          overflow-y: auto;
          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      }
      .popup-overlay {
          display: none;
          position: fixed;
          left: 0;
          top: 0;
          width: 100%;
          height: 100%;
          background: rgba(0, 0, 0, 0.5);
          z-index: 999;
      }
      .close-btn {
          cursor: pointer;
          color: red;
      }
      /* 브라우저 이미지 스타일 */
      .browser-icon {
          position: fixed;
          left: 280px;
          bottom: 30px;
          cursor: pointer;
          z-index: 998; /* 팝업보다 위에 표시 */
      }
    </style>
</head>
<body>
    <%- include('../partials/navbar') %> 
    <%- include('../partials/bottom-navbar') %>
    <%- include('../partials/managebar') %>
    
    <div class="container-fluid p-0" style="max-width: 960px; margin-bottom: 100px;">
      <div class="content-wrapper p-3">
  
          <h1 class="mb-4"><%= notice.title %> 번역</h1>
          
          <div class="d-flex justify-content-between align-items-center mb-4">
            <a href="/admin/notices" class="btn btn-secondary"><i class="bi bi-arrow-bar-left me-1"></i>목록으로</a>
        
            <form action="/notices/translate/<%= notice._id %>" method="POST" class="d-flex align-items-center">
                <!-- <label for="targetLang" class="form-label mb-0 me-2">목표 언어 선택:</label> -->
                <select id="targetLang" name="targetLang" class="form-select me-2" required>
                    <option value="" disabled selected>언어 선택</option>
                    <% const lang = typeof targetLang !== 'undefined' ? targetLang : ''; %>
                    <option value="sc" <%= targetLang === 'sc' ? 'selected' : '' %>>중국어 간체</option>
                    <option value="tc" <%= targetLang === 'tc' ? 'selected' : '' %>>중국어 번체</option>
                    <option value="jp" <%= targetLang === 'jp' ? 'selected' : '' %>>일본어</option>
                    <option value="en" <%= targetLang === 'en' ? 'selected' : '' %>>영어</option>
                    <option value="vi" <%= targetLang === 'vi' ? 'selected' : '' %>>베트남어</option>
                </select>
                <button type="submit" class="btn btn-primary text-nowrap"><i class="bi bi-translate me-1"></i>번역</button>
            </form>
        </div>
        
          
          <% if (lines && lines.length > 0) { %>
              <form action="/notices/translate/save/<%= notice._id %>" method="POST" class="mb-4">
                  <input type="hidden" name="title" value="<%= notice.title %>">
                  <input type="hidden" name="content" value="<%= notice.content %>">
                  <input type="hidden" name="lang" value="<%= targetLang %>">
                  
                  <div class="button-container text-end mb-3">
                      <button type="button" class="btn btn-outline-danger btn-sm" onclick="resetInputs()"><i class="bi bi-arrow-repeat me-1"></i>리셋</button>
                      <button type="button" class="btn btn-outline-secondary btn-sm" onclick="loadFinalTranslations()">최종 번역 로드</button>
                      <button type="submit" class="btn btn-primary btn-sm">저장</button>
                  </div>
  
                  <% for (let i = 0; i < lines.length; i++) { %>
                    <div class="translation-pair mb-3 p-3 border rounded d-flex flex-column">
                      <div class="<%= finalTranslations[i] === '' ? 'original rounded p-2 bg-danger-subtle' : 'original rounded p-2 bg-warning-subtle' %>">
                          <%= lines[i] %>
                      </div>
                      <div class="d-flex flex-column flex-md-row my-1">
                          <div class="google-translation me-2 p-2" onclick="setFinalTranslation(<%= i %>, '<%= googleTranslations[i] ? googleTranslations[i].replace(/'/g, '\\\'') : '' %>', event)">
                              <span class="d-flex align-items-start">
                                  <i class="bi bi-google me-2"></i>
                                  <span class="flex-grow-1" onclick="event.stopPropagation();"><%= googleTranslations[i] || '' %></span>
                              </span>
                          </div>
                          <div class="microsoft-translation me-2 p-2" onclick="setFinalTranslation(<%= i %>, '<%= microsoftTranslations[i] ? microsoftTranslations[i].replace(/'/g, '\\\'') : '' %>', event)">
                              <span class="d-flex align-items-start">
                                  <i class="bi bi-microsoft me-2"></i>
                                  <span class="flex-grow-1" onclick="event.stopPropagation();"><%= microsoftTranslations[i] || '' %></span>
                              </span>
                          </div>
                          <div class="deepl-translation p-2" onclick="setFinalTranslation(<%= i %>, '<%= deeplTranslations[i] ? deeplTranslations[i].replace(/'/g, '\\\'') : '' %>', event)">
                              <span class="d-flex align-items-start">
                                  <i class="bi bi-share-fill me-2"></i>
                                  <span class="flex-grow-1" onclick="event.stopPropagation();"><%= deeplTranslations[i] || ' ' %></span>
                              </span>
                          </div>
                      </div>
                      <div class="final-translation my-1">
                          <textarea id="finalTranslation<%= i %>" name="finalTranslations[<%= i %>]" required class="form-control" style="width: 100%; box-sizing: border-box;"><%= finalTranslations[i] || '' %></textarea>
                      </div>
                  </div>
                  
                  <% } %>
              </form>
          <% } else { %>
              <p>번역할 내용이 없습니다.</p>
          <% } %>
  
      </div>
  </div>
  
  
  <div class="browser-icon" id="browserIcon">
      <img src="/browser.png" alt="브라우저 아이콘" style="width: 50px; height: 50px;">
  </div>

  <div class="popup-overlay" id="popupOverlay"></div>
  <div class="popup" id="popup">
      <span class="close-btn" id="closePopup">닫기</span>
      <h2><%= notice.title %></h2>
      <div><%- styledContent %></div>
  </div>

<!-- 모달 HTML 추가 -->
<div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="successModalLabel">성공</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p id="modalMessage"></p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // 서버에서 보낸 메시지가 있을 때 모달을 띄움
    const message = '<%= success_msg ? success_msg : "" %>'; // success_msg로 변경
    if (message) {
      document.getElementById('modalMessage').textContent = message;
      const successModal = new bootstrap.Modal(document.getElementById('successModal'));
      successModal.show();
    }
  });
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script>
    document.documentElement.dataset.lang = '<%= lang %>';
</script>
<script src="/js/lang.js"></script> 
<script>
    function togglePopup(show) {
        const displayValue = show ? 'block' : 'none';
        document.getElementById('popup').style.display = displayValue;
        document.getElementById('popupOverlay').style.display = displayValue;
    }

    document.getElementById('browserIcon').addEventListener('click', () => togglePopup(true));
    document.getElementById('closePopup').addEventListener('click', () => togglePopup(false));
    document.getElementById('popupOverlay').addEventListener('click', () => togglePopup(false));

    function setFinalTranslation(index, translation, event) {
        event.stopPropagation();
        const textarea = document.getElementById(`finalTranslation${index}`);
        textarea.value = translation; // 번역 내용을 textarea에 설정

        // 현재 인덱스의 모든 아이콘에서 선택된 클래스를 제거
        const icons = document.querySelectorAll(`.translation-pair:nth-child(${index + 1}) i`);
        icons.forEach(icon => {
            icon.classList.remove('text-primary'); // 선택된 아이콘에서 text-primary 제거
        });

        // 클릭한 이미지에 선택된 클래스를 추가
        const selectedIcon = event.currentTarget.querySelector('i'); // 클릭한 요소의 <i> 태그
        selectedIcon.classList.add('text-primary'); // 선택된 아이콘에 text-primary 추가
    }

document.addEventListener("DOMContentLoaded", function() {
    const translationPairs = document.querySelectorAll('.translation-pair');

    translationPairs.forEach(pair => {
        const originalHeight = pair.querySelector('.original').offsetHeight;
        const googleHeight = pair.querySelector('.google-translation').offsetHeight;
        const microsoftHeight = pair.querySelector('.microsoft-translation').offsetHeight;
        const deeplHeight = pair.querySelector('.deepl-translation').offsetHeight;

        // 가장 높은 height 값 찾기
        const maxHeight = Math.max(originalHeight, googleHeight, microsoftHeight, deeplHeight);
        
        // line-height를 가져옵니다
        const textarea = pair.querySelector('.final-translation textarea');
        const lineHeight = parseFloat(getComputedStyle(textarea).lineHeight) || 20; // 기본값 설정
        
        // 최대 높이에 따라 줄 수를 계산하고, 줄 단위로 높이를 설정
        const lineCount = Math.floor(maxHeight / lineHeight); // 최대 높이를 line-height로 나누어 줄 수 계산

        // 줄 수에 따른 높이 설정
        textarea.style.height = (lineCount * lineHeight) + 'px';
    });
});

  // 페이지 로드 시 임시 저장된 번역 내용 가져오기
  document.addEventListener("DOMContentLoaded", async function() {
      const noticeId = "<%= notice._id %>";
      const targetLang = "<%= targetLang %>";
      
      try {
          const response = await fetch(`/notices/temporary/${noticeId}/${targetLang}`);
          const data = await response.json();
          
          if (data.translations.length > 0) {
              data.translations.forEach((translation, index) => {
                  const textarea = document.getElementById(`finalTranslation${index}`);
                  if (textarea) {
                      textarea.value = translation; // 임시 저장된 값을 textarea에 설정
                  }
              });
          }
      } catch (error) {
          console.error('임시 저장된 내용 로드 오류:', error);
      }
  
      // textarea 값 변경 시 임시 저장
      const textareas = document.querySelectorAll('.final-translation textarea');
      textareas.forEach((textarea, index) => {
          textarea.addEventListener('input', async function() {
              const translations = Array.from(textareas).map(t => t.value); // 모든 textarea 값 가져오기
              const noticeId = "<%= notice._id %>";
              const language = targetLang;
              
              try {
                  await fetch('/notices/temporary-save', {
                      method: 'POST',
                      headers: {
                          'Content-Type': 'application/json'
                      },
                      body: JSON.stringify({ noticeId, language, translations })
                  });
              } catch (error) {
                  console.error('임시 저장 오류:', error);
              }
          });
      });
  });

  function resetInputs() {
        const textareas = document.querySelectorAll('.final-translation textarea');
        textareas.forEach(textarea => {
            textarea.value = ''; // 모든 textarea 값 초기화
        });
    }

    async function loadFinalTranslations() {
        const finalTranslations = <%- JSON.stringify(finalTranslations) %>;
        if (finalTranslations.length === 0 || finalTranslations.every(t => t === '')) {
            alert('최종 저장된 번역이 없습니다.');
            return;
        }

        const textareas = document.querySelectorAll('.final-translation textarea');
        textareas.forEach((textarea, index) => {
            textarea.value = finalTranslations[index] || ''; // 최종 번역 값 설정
        });
    }
  </script>
</body>
</html>
