<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= survey.title[lang] || survey.title['ko'] %> 응답하기</title>
    <meta name="theme-color" content="#254B7A"> <!-- Android Chrome -->
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"> <!-- iOS Safari -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/styles.css"> <!-- CSS 파일 경로 -->
</head>
<body>
    <%- include('../partials/navbar') %> 
    <%- include('../partials/bottom-navbar') %>

    <div class="container-fluid p-0" style="max-width: 960px; margin-bottom: 100px;">
      <div class="content-wrapper p-3">
        <h1 class="mb-4"><%= survey.title[lang] || survey.title['ko'] %></h1>
          <% if (survey.startDate || survey.endDate) { %>
            <div class="alert alert-warning mb-3 text-black" role="alert">
                <% if (survey.startDate) { %>
                  <div class="my-1 align-items-center">
                      <p class="mb-1"><%= texts.survey.startDate[lang] %> : <%= formattedStartDate %></p>
                  </div>
              <% } %>
              
              <% if (survey.endDate) { %>
                  <div class="my-1 align-items-center">
                      <p class="mb-1"><%= texts.survey.endDate[lang] %> : <%= formattedEndDate %></p>
                      <span id="remaining-time" class="text-danger"></span>
                  </div>
      
                  <script>
                      // 남은 시간 계산 및 업데이트
                      function updateRemainingTime(endDate) {
                          const endTime = new Date(endDate);
                          const currentTime = new Date();
                          const remainingTime = endTime - currentTime;
                  
                          // 12시간을 밀리초로 정의
                          const twelveHoursInMilliseconds = 12 * 60 * 60 * 1000; // 12 * 60분 * 60초 * 1000밀리초
                  
                          // 12시간 이내인지 확인
                          if (remainingTime > 0 && remainingTime <= twelveHoursInMilliseconds) {
                              const hours = Math.floor((remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                              const minutes = Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60));
                              const seconds = Math.floor((remainingTime % (1000 * 60)) / 1000);
                              document.getElementById("remaining-time").innerHTML = `<i class="bi bi-alarm-fill me-2"></i> ${hours}시간 ${minutes}분 ${seconds}초`;
                              document.getElementById("remaining-time").style.display = "block"; // 표시
                          } else {
                              document.getElementById("remaining-time").style.display = "none"; // 숨김
                          }
                      }
                  
                      // 페이지 로드 시 남은 시간을 업데이트
                      window.onload = function() {
                          const endDate = new Date("<%= survey.endDate.toISOString() %>");
                          updateRemainingTime(endDate);
                          setInterval(() => updateRemainingTime(endDate), 1000); // 1초마다 업데이트
                      };
                  </script>
              <% } %>
            </div>
          <% } %>
        <% if (message) { %>
            <div class="alert alert-danger text-center"><%= message %></div>
        <% } else { %>
          <form action="/surveys/<%= survey._id %>/respond" method="POST" onsubmit="return submitForm(event)">
                <% survey.questions.forEach(function(question, index) { %>
                    <div class="mb-3 rounded-3 bg-white p-3">
                        <% if (question.questionType === 'info') { %>
                            <label class="fs-5 fw-bold mb-2"><%= question.questionText[lang] || question.questionText['ko'] %></label>
                            <p class="rounded bg-danger-subtle small p-2 d-flex align-items-start">
                                <i class="bi bi-exclamation-triangle-fill text-danger opacity-75 ms-1 me-2"></i>
                                <span class="flex-grow-1"><%= question.questionDescription[lang] || question.questionDescription['ko'] %></span>
                            </p>
                            <p class="mb-0"><%- question.infoText[lang] || question.infoText['ko'] %></p>
                        <% } else { %>
                            <label class="form-label fs-5 fw-bold"><%= question.questionText[lang] || question.questionText['ko'] %></label>
                            <% if (question.isRequired) { %>
                                <span class="text-danger"><SUP><i class="bi bi-asterisk" style="font-size: 9px;"></i></SUP></span>
                            <% } %>
                            <% if (question.questionDescription['ko']) { %>
                                <p class="rounded bg-warning-subtle small p-2 d-flex align-items-start">
                                    <i class="bi bi-lightbulb-fill text-warning opacity-75 ms-1 me-2"></i>
                                    <span class="flex-grow-1"><%= question.questionDescription[lang] || question.questionDescription['ko'] %></span>
                                </p>
                            <% } %>

                            <% if (question.questionType === 'short_answer') { %>
                                <div class="input-group mb-2">
                                    <% if (question.prefixText['ko']) { %>
                                        <span class="input-group-text"><%= question.prefixText[lang] || question.prefixText['ko'] %></span>
                                    <% } %>
                            
                                    <% if (question.inputType === 'integer') { %> 
                                        <input type="number" name="answers[<%= index %>][answer]" class="form-control"
                                            <% if (question.isRequired) { %> required <% } %>
                                            min="<%= question.minValue %>" 
                                            max="<%= question.maxValue %>" 
                                            pattern="\d+" title="정수만 입력 가능합니다." 
                                            oninput="this.value = this.value.replace(/[^0-9]/g, '');" 
                                        >
                                    <% } else { %>
                                        <input type="text" name="answers[<%= index %>][answer]" class="form-control"
                                            <% if (question.isRequired) { %> required <% } %>
                                            <% if (question.inputType === 'letters') { %> 
                                                pattern="[a-zA-Z\s]+" title="영문자만 입력 가능합니다." 
                                                oninput="this.value = this.value.toUpperCase();" 
                                            <% } %>
                                        >
                                    <% } %>
                            
                                    <% if (question.suffixText['ko']) { %>
                                        <span class="input-group-text"><%= question.suffixText[lang] || question.suffixText['ko'] %></span>
                                    <% } %>
                                </div>
                                <div>
                                    <input type="hidden" name="answers[<%= index %>][questionId]" value="<%= question._id %>">
                                    <% if (question.inputType === 'integer') { %>
                                        <input type="hidden" name="answers[<%= index %>][minValue]" value="<%= question.minValue %>">
                                        <input type="hidden" name="answers[<%= index %>][maxValue]" value="<%= question.maxValue %>">
                                    <% } %>
                                </div>
                                
                            <% } else if (question.questionType === 'long_answer') { %>
                                <textarea name="answers[<%= index %>][answer]" class="form-control" 
                                <% if (question.isRequired) { %> required <% } %>
                                ></textarea>
                                <input type="hidden" name="answers[<%= index %>][questionId]" value="<%= question._id %>">
                            <% } else if (question.questionType === 'single_choice') { %>
                              <% question.options.forEach(function(option) { %>
                                  <div class="form-check my-3">
                                      <input type="radio" 
                                          name="answers[<%= index %>][answer]" value="<%= option[lang] || option['ko'] %>"
                                          <% if (question.isRequired) { %> required <% } %>
                                          class="form-check-input" id="option-<%= index %>-<%= option[lang] || option['ko'] %>">
                                      <label class="form-check-label" for="option-<%= index %>-<%= option[lang] || option['ko'] %>">
                                          <%= option[lang] || option['ko'] %>
                                      </label>
                                  </div>
                              <% }); %>
                              <% if (question.allowOther) { %>
                                  <div class="form-check mt-2">
                                      <input type="radio" 
                                          name="answers[<%= index %>][answer]" value="기타 응답" 
                                          id="otherOption<%= index %>" 
                                          <% if (question.isRequired) { %> required <% } %>
                                          class="form-check-input">
                                      <input type="text" class="form-control mt-1" 
                                          id="otherAnswer<%= index %>" 
                                          name="answers[<%= index %>][otherAnswer]" 
                                          placeholder="<%= texts.survey.otherAnswer[lang] %>" 
                                          oninput="document.getElementById('otherOption<%= index %>').checked = true;">
                                  </div>
                              <% } %>
                          <input type="hidden" name="answers[<%= index %>][questionId]" value="<%= question._id %>">
                          <% } else if (question.questionType === 'multiple_choice') { %>
                              <% question.options.forEach(function(option) { %>
                                  <div class="form-check my-3">
                                      <input type="checkbox" 
                                          name="answers[<%= index %>][answer][]" value="<%= option[lang] || option['ko'] %>"
                                          <% if (question.isRequired) { %> required <% } %>
                                          class="form-check-input" id="option-<%= index %>-<%= option[lang] || option['ko'] %>">
                                      <label class="form-check-label" for="option-<%= index %>-<%= option[lang] || option['ko'] %>">
                                          <%= option[lang] || option['ko'] %>
                                      </label>
                                  </div>
                              <% }); %>
                              <% if (question.allowOther) { %>
                                  <div class="form-check mt-2">
                                      <input type="checkbox" 
                                          name="answers[<%= index %>][answer][]" value="기타 응답" 
                                          id="otherOption<%= index %>" 
                                          <% if (question.isRequired) { %> required <% } %>
                                          class="form-check-input">
                                      <input type="text" class="form-control mt-1" 
                                          id="otherAnswer<%= index %>" 
                                          name="answers[<%= index %>][otherAnswer]" 
                                          placeholder="<%= texts.survey.otherAnswer[lang] %>" 
                                          oninput="document.getElementById('otherOption<%= index %>').checked = true;">
                                  </div>
                              <% } %>
                            <input type="hidden" name="answers[<%= index %>][questionId]" value="<%= question._id %>">
                            <% } else if (question.questionType === 'dropdown') { %>
                                <select name="answers[<%= index %>][answer]" class="form-select" 
                                <% if (question.isRequired) { %> required <% } %>
                                >
                                    <option value="" selected><%= texts.survey.select[lang] %></option>
                                    <% question.options.forEach(function(option) { %>
                                        <option value="<%= option[lang] || option['ko'] %>"><%= option[lang] || option['ko'] %></option>
                                    <% }); %>
                                </select>
                                <input type="hidden" name="answers[<%= index %>][questionId]" value="<%= question._id %>">
                            <% } else if (question.questionType === 'date') { %>
                                <input type="date" name="answers[<%= index %>][answer]" class="form-control" 
                                <% if (question.isRequired) { %> required <% } %>
                                >
                                <input type="hidden" name="answers[<%= index %>][questionId]" value="<%= question._id %>">
                            <% } else if (question.questionType === 'reservation') { %>
                              <div class="mb-2">
                                <labe><%= texts.survey.selectDate[lang] %> :</label>
                            </div>
                              <div id="calendar" class="d-flex flex-wrap" style="margin-top: 10px;"></div>
                              <input type="hidden" name="answers[<%= index %>][questionId]" value="<%= question._id %>">
                              <script>
                                  console.log('Index:', <%= index %>);
                                  function displayCalendar(startDate, endDate, maxParticipants, surveyId, exceptionDates, index) {
                                      const calendarDiv = document.getElementById('calendar');
                                      calendarDiv.innerHTML = ''; // 기존 내용 초기화
                              
                                      const start = new Date(startDate);
                                      const end = new Date(endDate);
                                      const days = [];
                              
                                      // 시작일부터 종료일까지의 날짜 배열 생성
                                      for (let d = start; d <= end; d.setDate(d.getDate() + 1)) {
                                          days.push(new Date(d));
                                      }
                              
                                      // 날짜 버튼 생성
                                      days.forEach(date => {
                                          const dateString = new Date(date).toISOString().split('T')[0];
                                          const cell = document.createElement('div');
                                          cell.className = 'calendar-cell d-flex flex-column align-items-center justify-content-center m-0 me-1 p-0';
                                          cell.style.flex = '1 0 8%'; // 한 줄에 7개 표시
                              
                                          // 날짜에 대한 응답 수 확인
                                          if (exceptionDates.includes(dateString)) {
                                              cell.innerHTML = `
                                                  <button class="btn btn-secondary w-100 small px-0 py-1" disabled>
                                                      <p class="small lh-sm m-0">${date.getMonth() + 1}/${date.getDate()}<br>-</p>
                                                  </button>
                                              `;
                                          } else {
                                              const radio = document.createElement('input');
                                              radio.type = 'radio';
                                              radio.name = `answers[${index}][answer]`;
                                              radio.value = dateString;
                                              radio.id = `date-${dateString}`;
                                              radio.className = 'btn-check'; // 라디오 버튼 숨기기
                              
                                              const label = document.createElement('label');
                                              label.htmlFor = `date-${dateString}`;
                                              label.className = 'btn btn-outline-secondary w-100 text-center lh-sm small px-0 py-1'; // 부트스트랩 버튼 스타일 적용 '${date.getFullYear()}'
                              
                                              // 응답 수 가져오기
                                              fetch(`/surveys/${surveyId}/countResponses?date=${dateString}`)
                                                  .then(response => response.json())
                                                  .then(data => {
                                                      label.innerHTML = `
                                                          <p class="small lh-sm m-0">${date.getMonth() + 1}/${date.getDate()}<br>
                                                          (<span class="small" id="response-count-${dateString}">로딩 중...</span>)</p>
                                                      `;
                                                      document.getElementById(`response-count-${dateString}`).innerText = `${data.count}/${maxParticipants}`;
                              
                                                      if (data.count >= maxParticipants) {
                                                          label.className = 'btn btn-danger w-100 text-center lh-sm disabled small px-0 py-1';
                                                          label.setAttribute('disabled', 'true');
                                                          radio.disabled = true; // 라디오 버튼 비활성화
                                                      }
                                                  });
                              
                                              // 라디오 버튼과 레이블을 DOM에 추가
                                              cell.appendChild(radio);
                                              cell.appendChild(label);
                                          }
                                          calendarDiv.appendChild(cell);
                                      });
                                  }
                              
                                  const exceptionDates = <%- JSON.stringify(question.reservation.exceptionDates) %>; // 예외 날짜 배열 가져오기
                                  displayCalendar(
                                      '<%= question.reservation.startDate %>',
                                      '<%= question.reservation.endDate %>',
                                      <%= question.reservation.maxParticipants %>,
                                      '<%= survey._id %>',
                                      exceptionDates, // 예외 날짜 배열 전달
                                      <%= index %>
                                  );
                              </script>
                              
                            <% } else if (question.questionType === 'time_reservation') { %>
                              <select name="timeReservationDate" onchange="handleTimeReservationDateChange(this, <%= index %>)" class="form-select">
                                  <option value=""><%= texts.survey.selectDate[lang] %></option>
                                  <% question.time_reservation.availableDates.forEach(date => { %>
                                      <option value="<%= date %>"><%= date %></option>
                                  <% }); %>
                              </select>
                              <div id="timeSlots<%= index %>" class="mt-3 d-flex flex-wrap justify-content-start" style="max-width: 100%;"></div>
                              <input type="hidden" name="answers[<%= index %>][questionId]" value="<%= question._id %>">
                              <script>
                                  console.log('Index:', <%= index %>);
                                  function handleTimeReservationDateChange(select, questionIndex) {
                                      const selectedDate = select.value;
                                      const timeSlotsDiv = document.getElementById(`timeSlots${questionIndex}`);
                                      timeSlotsDiv.innerHTML = ''; // 기존 내용 초기화
                              
                                      if (selectedDate) {
                                          const startTime = '<%= question.time_reservation.startTime %>';
                                          const endTime = '<%= question.time_reservation.endTime %>';
                                          const interval = <%= question.time_reservation.interval %>;
                              
                                          // 시작 시간과 종료 시간을 Date 객체로 변환
                                          const startDateTime = new Date(`1970-01-01T${startTime}:00`);
                                          const endDateTime = new Date(`1970-01-01T${endTime}:00`);
                                          const timeSlots = [];
                              
                                          // 시간 슬롯 배열 생성
                                          for (let time = startDateTime; time <= endDateTime; time.setMinutes(time.getMinutes() + interval)) {
                                              timeSlots.push(time.toTimeString().split(' ')[0].substring(0, 5)); // HH:mm 형식으로 저장
                                          }
                              
                                          // fetch 요청을 Promise 배열로 변환
                                          const fetchPromises = timeSlots.map(time => {
                                              return fetch(`/surveys/<%= survey._id %>/countResponses?date=${selectedDate}&time=${time}`)
                                                  .then(response => response.json())
                                                  .then(data => {
                                                      return { time, count: data.count }; // 시간과 응답 수를 객체로 반환
                                                  });
                                          });
                              
                                          // 모든 fetch 요청이 완료된 후 처리
                                          Promise.all(fetchPromises).then(results => {
                                              results.forEach(result => {
                                                  const { time, count } = result;
                              
                                                  const radio = document.createElement('input');
                                                  radio.type = 'radio';
                                                  radio.name = `answers[${questionIndex}][answer]`;
                                                  radio.value = `${selectedDate} ${time}`;
                                                  radio.id = `time-${selectedDate}-${time}`;
                                                  radio.classList.add('btn-check'); // 부트스트랩 버튼 체크 클래스 추가
                              
                                                  if (count >= <%= question.time_reservation.maxParticipants %>) {
                                                      radio.disabled = true; // 최대 인원 초과 시 비활성화 'label.classList.add('disabled');'
                                                  }
                              
                                                  const label = document.createElement('label');
                                                  label.htmlFor = `time-${selectedDate}-${time}`;
                                                  label.innerHTML = `${time} <span class="d-block d-md-inline small">(${count}/${<%= question.time_reservation.maxParticipants %>})</span>`;
                                                  label.classList.add('btn', 'btn-outline-secondary', 'col-6', 'col-md-3', 'mb-2', 'mx-1'); // 버튼 스타일과 그리드 클래스 추가
                              
                                                  // 버튼 폭 조정
                                                  label.style.flex = '1 0 15%'; // PC에서 4개가 들어가도록 조정
                                                  label.style.minWidth = '130px'; // 최소 폭 설정
                              
                                                  // 라디오 버튼과 레이블을 DOM에 추가
                                                  timeSlotsDiv.appendChild(radio);
                                                  timeSlotsDiv.appendChild(label);
                                              });
                                          });
                                      }
                                  }
                              </script>
                              
                            <% } else if (question.questionType === 'preference') { %>
                                <% question.options.forEach((option, optionIndex) => { %>
                                    <div class="mb-3 d-flex align-items-center">
                                        <i class="bi bi-dot"></i>
                                        <select name="answers[<%= index %>][answer][<%= optionIndex %>]" class="form-select form-select-sm" onchange="updateRank(this)" style="width: auto;">
                                            <option value=""><%= texts.survey.ranking[lang] %></option>
                                            <% for (let i = 1; i <= question.rankLimit; i++) { %>
                                                <option value="<%= i %>"><%= i %></option>
                                            <% } %>
                                        </select>
                                        <label class="form-label ms-2 mb-0" style="flex-grow: 1;"><%= option[lang] %></label>
                                    </div>
                            <% }); %>
                                <input type="hidden" name="answers[<%= index %>][questionId]" value="<%= question._id %>">
                                <% } else if (question.questionType === 'email') { %>
                                  <div class="mb-3">
                                      <label for="email" class="form-label"><%= texts.survey.emailAddress[lang] %> :</label>
                                      <div class="d-flex align-items-center">
                                          <input type="email" id="email" name="answers[<%= index %>][answer]" class="form-control me-2" style="flex-grow: 1;" oninput="toggleVerificationCodeRequired()">
                                          <input type="hidden" name="answers[<%= index %>][questionId]" value="<%= question._id %>">
                                          <button type="button" class="btn btn-primary text-nowrap" onclick="sendVerificationCode()"><%= texts.survey.sendEmail[lang] %></button>
                                      </div>
                                  </div>                                
                                  <div class="mb-3">
                                      <label for="verificationCode" class="form-label"><%= texts.survey.verificationCode[lang] %> :</label>
                                      <div class="d-flex align-items-center">
                                          <input type="text" id="verificationCode" name="verificationCode" class="form-control me-2" oninput="toggleVerificationCodeRequired()">
                                          <button type="button" class="btn btn-outline-primary text-nowrap" onclick="verifyCode()"><%= texts.survey.emailVerify[lang] %></button>
                                        </div>
                                  </div>
                                  <input type="hidden" name="answers[<%= index %>][answer]" id="emailAnswer<%= index %>" value="">
                                  <script>
                                      let generatedCode; // 검증 코드를 저장할 변수

                                      function toggleVerificationCodeRequired() {
                                          const emailInput = document.getElementById('email');
                                          const verificationCodeInput = document.getElementById('verificationCode');

                                          // 이메일 입력 필드가 비어 있지 않으면 verificationCode 필드에 required 추가
                                          if (emailInput.value) {
                                              verificationCodeInput.setAttribute('required', 'required');
                                          } else {
                                              verificationCodeInput.removeAttribute('required');
                                          }
                                      }
                              
                                      function sendVerificationCode() {
                                          const email = document.getElementById('email').value;
                              
                                          // 이메일 주소가 비어 있는지 확인
                                          if (!email) {
                                              alert('이메일 주소를 입력해 주세요.');
                                              return;
                                          }
                              
                                          // 4자리 랜덤 검증 코드 생성
                                          generatedCode = Math.floor(1000 + Math.random() * 9000).toString();
                              
                                          fetch('/send-VerifyEmail', {
                                              method: 'POST',
                                              headers: {
                                                  'Content-Type': 'application/json'
                                              },
                                              body: JSON.stringify({
                                                  recipient: email,
                                                  subject: `[${generatedCode}] 이메일 검증 코드입니다.`,
                                                  message: `이메일 검증 코드 [${generatedCode}]를 입력해 주세요.` // 랜덤 코드 전송
                                              })
                                          })
                                          .then(response => {
                                              if (!response.ok) {
                                                  throw new Error('메일 발송 실패');
                                              }
                                              return response.json();
                                          })
                                          .then(data => {
                                              alert(data.message);
                                          })
                                          .catch(error => {
                                              console.error('Error:', error);
                                              alert('메일 발송 중 오류가 발생했습니다: ' + error.message);
                                          });
                                      }
                              
                                      function verifyCode() {
                                          const code = document.getElementById('verificationCode').value;
                              
                                          // 입력한 코드와 생성한 코드 비교
                                          if (code === generatedCode) {
                                              alert('검증이 완료되었습니다.');
                                              document.getElementById('email').disabled = true;
                                              document.getElementById('verificationCode').disabled = true;
            
                                              document.getElementById(`emailAnswer<%= index %>`).value = document.getElementById('email').value; // hidden input에 이메일 전송
                                          } else {
                                              alert('검증 코드가 일치하지 않습니다.');
                                          }
                                      }
                                  </script>
                              <% } %>
                          <% } %>
                      </div>
                  <% }); %>
                
                  <div class="d-flex justify-content-center pt-3">
                      <input type="hidden" name="startedAt" value="<%= startedAt.toISOString() %>">
                      <input type="hidden" name="lang" value="<%= lang %>">
                      <button type="submit" class="btn btn-primary"><%= texts.survey.submit[lang] %></button>
                  </div>
              </form>
          <% } %>
      </div>      
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script>
        document.documentElement.dataset.lang = '<%= lang %>';
    </script>
    <script src="/js/lang.js"></script> 
    <script>
function submitForm(event) {
    event.preventDefault(); // 기본 제출 방지
    const form = event.target;
    let valid = true;

    // 모든 다중 선택 질문 검증
    const multipleChoiceQuestions = form.querySelectorAll('input[name$="[answer][]"]');
    multipleChoiceQuestions.forEach((question) => {
        const questionIndex = question.name.match(/\[(\d+)\]/)[1]; // 문항 인덱스 추출
        const isChecked = Array.from(form.querySelectorAll(`input[name="answers[${questionIndex}][answer][]"]`))
            .some(input => input.checked);

        // 필수 문항이면서 체크된 항목이 없을 경우
        if (isChecked === false && question.required) {
            valid = false;
            alert(`문항 ${parseInt(questionIndex) + 1}은 필수로 선택해야 합니다.`);
        }
    });

    if (valid) {
        form.submit(); // 유효한 경우, 폼 제출
    }
}

      function updateRank(select) {
          const selectedValue = select.value;
          const allSelects = document.querySelectorAll(`select[name^="answers[${select.name.split('[')[1].split(']')[0]}][answer]"]`);

          allSelects.forEach(s => {
              if (s !== select && s.value === selectedValue) {
                  s.value = ""; // 중복된 순위는 해제
              }
          });
      }
    </script> 
</body>
</html>