<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>홈페이지</title>
    <meta name="theme-color" content="#254B7A"> <!-- Android Chrome -->
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"> <!-- iOS Safari -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css" />
    <script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
    <link rel="stylesheet" href="/css/calendar.css">
    <style>
        body {
            background-color: rgba(0, 0, 0, 0.01); /* 검은색 배경과 2% 투명도 */
        }
        .calendar-table {
            border-collapse: collapse;
            width: 100%;
            background-color: transparent;
        }
        .calendar-table th, .calendar-table td {
            text-align: center;
            padding: 12px 10px; /* 기존 패딩 유지 */
            vertical-align: middle;
            border: none; /* none으로 하면 테두리 없음 1px solid #dee2e6 */
            position: relative; /* 상대 위치 설정 */
        }
        .calendar-table th {
            font-weight: bold;
        }
        .scrollable-container {
            max-height: 245px; /* 원하는 최대 높이 설정 */
            overflow-y: scroll; /* 스크롤 가능하게 설정 */
            position: relative; /* 상대 위치 설정 */
            margin-top: -1px; /* 경계선이 보이지 않도록 조정 */
        }

        /* 스크롤바 숨기기 */
        .scrollable-container::-webkit-scrollbar {
            display: none; /* 스크롤바 숨기기 */
        }
        .calendar-table th {
            position: sticky; /* 고정 */
            top: 0; /* 상단에 고정 */
            background-color: white; /* 배경색 설정 (필요 시) */
            z-index: 10; /* z-index 설정 (필요 시) */
        }
        .today {
            background-color: #e9ecef; /* 회색 배경 */
            border-radius: 50%; /* 원형 모양 */
            width: 40px; /* 고정된 너비 */
            height: 40px; /* 고정된 높이 */
            display: flex; /* Flexbox 사용 */
            flex-direction: column; /* 세로 방향으로 정렬 */
            align-items: center; /* 수직 가운데 정렬 */
            justify-content: center; /* 수평 가운데 정렬 */
            position: absolute; /* 절대 위치 설정 */
            top: 50%; /* 수직 중앙 정렬 */
            left: 50%; /* 수평 중앙 정렬 */
            transform: translate(-50%, -50%); /* 중앙 정렬을 위해 이동 */
            box-sizing: border-box; /* 박스 모델 조정 */
            padding: 0; /* 내부 패딩 제거 */
        }
        .schedule-info {
            display: none; /* 기본적으로 숨김 */
            margin-top: 5px; /* 위쪽 여백 */
            text-align: left; /* 왼쪽 정렬 */
            grid-column: span 7; /* 7개 열을 차지 */
            width: 100%; /* 전체 너비 차지 */
        }
        .swiper-container {
            width: 100%; /* 전체 너비 차지 */
            max-width: 100vw; /* 뷰포트 너비를 초과하지 않도록 설정 */
            overflow: hidden; /* 넘치는 내용 숨기기 */
            position: relative;
        }
        .swiper-slide img {
            display: block;
            width: 100%; /* 이미지의 너비를 100%로 설정 */
            height: auto; /* 비율 유지 */
            object-fit: cover; /* 비율 유지하며 크기를 맞춤 */
        }
        .swiper-button-next, .swiper-button-prev {
            color: #ffffff; /* 버튼 색상 (필요에 따라 조정) */
            width: 40px; /* 버튼 너비 */
            height: 40px; /* 버튼 높이 */
            opacity: 0.7;
        }
        .swiper-pagination .swiper-pagination-bullet {
            background-color: #ffffff; /* 기본 배경색 */
            opacity: 0.7; /* 기본 투명도 */
            width: 12px; /* 너비 */
            height: 12px; /* 높이 */
            margin: 0 4px; /* 간격 조정 */
            border-radius: 50%; /* 원형으로 만들기 */
        }
        .swiper-pagination .swiper-pagination-bullet-active {
            background-color: #254B7A; /* 활성화된 버튼 색상 */
            opacity: 1; /* 활성화된 버튼의 투명도 */
        }
    </style>
</head>
<body>
    <%- include('partials/navbar') %> 
    <%- include('partials/bottom-navbar') %>
    <div class="container mt-4 p-0" style="max-width: 1200px;">

        <div class="my-3">
          <div class="swiper-container">
              <div class="swiper-wrapper">
                  <div class="swiper-slide">
                      <img src="/img/notice1.png" alt="Image 1" />
                  </div>
                  <div class="swiper-slide">
                      <img src="/img/notice2.png" alt="Image 2" />
                  </div>
                  <div class="swiper-slide">
                      <img src="/img/notice3.png" alt="Image 3" />
                  </div>
                  <!-- 더 많은 슬라이드 추가 가능 -->
              </div>
              <!-- 추가 내비게이션 버튼 (선택 사항) -->
              <div class="swiper-button-next"></div>
              <div class="swiper-button-prev"></div>
              <!-- 추가 페이지네이션 (선택 사항) -->
              <div class="swiper-pagination"></div>
          </div>
        </div>

        <div class="row justify-content-center my-3">
            <div class="col-12 d-flex justify-content-center">
                <a class="nav-link text-center opacity-75 p-0 mx-4" href="#">
                    <i class="bi bi-wifi" style="font-size: 22px;"></i>
                    <div class="small">무선인터넷</div>
                </a>
                <a class="nav-link text-center opacity-75 p-0 mx-4" href="#">
                    <i class="bi bi-clock" style="font-size: 22px;"></i>
                    <div class="small">운영 시간</div>
                </a>
                <a class="nav-link text-center opacity-75 p-0 mx-4" href="#">
                    <i class="bi bi-telephone" style="font-size: 22px;"></i>
                    <div class="small">연락처</div>
                </a>
                <a class="nav-link text-center opacity-75 p-0 mx-4" href="#">
                    <i class="bi bi-chat-left-text" style="font-size: 22px;"></i>
                    <div class="small">커뮤니티</div>
                </a>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <div class="table-responsive border rounded-4 bg-white bg-border shadow-sm p-2" style="overflow: hidden; width: 90%; margin: 0 auto;">
                    <div class="scrollable-container">
                        <table class="calendar-table" style="background-color: transparent;">
                            <thead>
                                <tr>
                                    <th> </th>
                                    <th>월</th>
                                    <th>화</th>
                                    <th>수</th>
                                    <th>목</th>
                                    <th>금</th>
                                    <th>토</th>
                                    <th>일</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% 
                                    const today = new Date(); // 오늘 날짜
                                    const scheduleDates = schedules.map(schedule => {
                                        const start = new Date(schedule.startDate);
                                        const end = schedule.endDate ? new Date(schedule.endDate) : start;
                                        const dates = [];
                                
                                        // startDate와 endDate 범위 사이의 날짜를 배열에 추가
                                        for (let d = new Date(start); d <= end; d.setDate(d.getDate() + 1)) {
                                            dates.push(new Date(d)); // 새로운 날짜 객체 생성
                                        }
                                        return dates;
                                    }).flat(); // 모든 날짜를 하나의 배열로 평탄화
                                %>
                                <% 
                                    const startDate = new Date('2024-09-02');
                                    const weeks = 13; // 총 13주
                                    for (let i = 0; i < weeks; i++) {
                                        let weekDays = [];
                                        for (let j = 0; j < 7; j++) {
                                            const currentDate = new Date(startDate);
                                            currentDate.setDate(startDate.getDate() + (i * 7) + j);
                                            weekDays.push(currentDate);
                                        }
                                %>
                                <tr>
                                    <td style="font-size: 75%;" class="text-primary"><%= i + 1 %></td> <!-- 주차 수 추가 -->
                                    <% weekDays.forEach((day) => { %>
                                    <td>
                                        <div class="<%= day.toDateString() === today.toDateString() ? 'today' : '' %>">
                                            <%= day.getDate() %>
                                            <% if (scheduleDates.some(date => date.toDateString() === day.toDateString())) { %>
                                                <span class="schedule-dot" style="color: red; font-size: 0.5em; display: block; margin-top: 0px; cursor: pointer;">&#9679;</span> <!-- 빨간 점 표시 -->
                                            <% } %>
                                        </div>
                                        <div class="schedule-info" style="display: none; margin-top: 5px; text-align: left; grid-column: span 7; width: 100%;"></div> <!-- 일정 정보 표시용 div -->
                                    </td>
                                    <% }); %>
                                </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>


        
        <div class="text-center mt-4">
            <a href="/posts?category=general" class="btn btn-secondary m-2">일반 게시판</a>
            <a href="/posts?category=secondhand" class="btn btn-secondary m-2">거래 게시판</a>
            <a href="/posts?category=culture" class="btn btn-secondary m-2">문화 게시판</a>
            <a href="/posts?category=question" class="btn btn-secondary m-2">한국어 질문 게시판</a>
        </div>

        <div class="text-center mt-4">
            <a href="/login" class="btn btn-primary m-2">로그인</a>
            <a href="/admin" class="btn btn-secondary m-2">관리자 페이지</a>
        </div>
        <p>콘텐츠가 늘어나면</p>
        <p>콘텐츠가 늘어나면</p>
        <p>콘텐츠가 늘어나면</p>
        <p>콘텐츠가 늘어나면</p>
        <p>콘텐츠가 늘어나면</p>
        <p>콘텐츠가 늘어나면</p>
        <p>콘텐츠가 늘어나면</p>
        <p>콘텐츠가 늘어나면</p>
        <p>콘텐츠가 늘어나면</p>
        <p>콘텐츠가 늘어나면</p>
        <p>콘텐츠가 늘어나면</p>
        <p>콘텐츠가 늘어나면</p>
        <p>콘텐츠가 늘어나면</p>
        <p>콘텐츠가 늘어나면</p>
        <p>콘텐츠가 늘어나면</p>
        <p>콘텐츠가 늘어나면</p>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const scheduleDots = document.querySelectorAll('.schedule-dot');

        scheduleDots.forEach(dot => {
            dot.addEventListener('click', function() {
              const scheduleInfoDiv = this.closest('td').querySelector('.schedule-info');
                const dayElement = this.parentElement.firstChild; // 날짜 가져오기
                const dayContent = dayElement.textContent; // 날짜 텍스트 가져오기
                const currentYear = new Date().getFullYear(); // 현재 연도 가져오기
                const date = new Date(`${currentYear}-${new Date().getMonth() + 1}-${dayContent}`); // 날짜 객체 생성

                // AJAX 요청을 통해 해당 날짜의 일정을 가져오도록 수정
                fetch(`/schedules?date=${date.toISOString().split('T')[0]}`)
                    .then(response => response.json())
                    .then(data => {
                        scheduleInfoDiv.innerHTML = ''; // 기존 내용 초기화
                        if (data.length > 0) {
                            data.forEach(schedule => {
                                scheduleInfoDiv.innerHTML += `
                                    <div>
                                        <strong>제목:</strong> ${schedule.title}<br>
                                        <strong>유형:</strong> ${schedule.category}<br>
                                        <strong>시작:</strong> ${new Date(schedule.startDate).toLocaleString()}<br>
                                        <strong>종료:</strong> ${schedule.endDate ? new Date(schedule.endDate).toLocaleString() : '없음'}<br>
                                        <strong>설명:</strong> ${schedule.description}<br>
                                        <strong>링크:</strong> <a href="${schedule.link}" target="_blank">${schedule.link}</a><br>
                                        <hr>
                                    </div>
                                `;
                            });
                        } else {
                            scheduleInfoDiv.innerHTML = '<div>일정이 없습니다.</div>';
                        }
                        // 토글
                        scheduleInfoDiv.style.display = scheduleInfoDiv.style.display === 'none' ? 'block' : 'none';
                    });
            });
        });
    });

    const swiper = new Swiper('.swiper-container', {
        // 옵션 설정
        loop: true, // 루프 모드 활성화
        autoplay: {
            delay: 5000, // 자동 재생 시간 (밀리초)
            disableOnInteraction: true, // 사용자 상호작용 시 자동 재생 유지
        },
        pagination: {
            el: '.swiper-pagination',
            clickable: true, // 클릭 가능
        },
        navigation: {
            nextEl: '.swiper-button-next', // 다음 버튼
            prevEl: '.swiper-button-prev', // 이전 버튼
        },
    });
    </script>
</body>
</html>
